// Generated by view binder compiler. Do not edit!
package com.example.lostpals.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lostpals.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final ConstraintLayout constraintRoot;

  @NonNull
  public final EditText etPassword;

  @NonNull
  public final EditText etUsername;

  @NonNull
  public final NestedScrollView scrollRoot;

  @NonNull
  public final TextView tvAppName;

  @NonNull
  public final TextView tvRegisterLink;

  @NonNull
  public final TextView tvWelcome;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogin,
      @NonNull ConstraintLayout constraintRoot, @NonNull EditText etPassword,
      @NonNull EditText etUsername, @NonNull NestedScrollView scrollRoot,
      @NonNull TextView tvAppName, @NonNull TextView tvRegisterLink, @NonNull TextView tvWelcome) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.constraintRoot = constraintRoot;
    this.etPassword = etPassword;
    this.etUsername = etUsername;
    this.scrollRoot = scrollRoot;
    this.tvAppName = tvAppName;
    this.tvRegisterLink = tvRegisterLink;
    this.tvWelcome = tvWelcome;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      ConstraintLayout constraintRoot = (ConstraintLayout) rootView;

      id = R.id.etPassword;
      EditText etPassword = ViewBindings.findChildViewById(rootView, id);
      if (etPassword == null) {
        break missingId;
      }

      id = R.id.etUsername;
      EditText etUsername = ViewBindings.findChildViewById(rootView, id);
      if (etUsername == null) {
        break missingId;
      }

      id = R.id.scrollRoot;
      NestedScrollView scrollRoot = ViewBindings.findChildViewById(rootView, id);
      if (scrollRoot == null) {
        break missingId;
      }

      id = R.id.tvAppName;
      TextView tvAppName = ViewBindings.findChildViewById(rootView, id);
      if (tvAppName == null) {
        break missingId;
      }

      id = R.id.tvRegisterLink;
      TextView tvRegisterLink = ViewBindings.findChildViewById(rootView, id);
      if (tvRegisterLink == null) {
        break missingId;
      }

      id = R.id.tvWelcome;
      TextView tvWelcome = ViewBindings.findChildViewById(rootView, id);
      if (tvWelcome == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, btnLogin, constraintRoot,
          etPassword, etUsername, scrollRoot, tvAppName, tvRegisterLink, tvWelcome);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
